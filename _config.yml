permalink: /blog/:title
future:    false
pygments:  true
lsi:       false
safe:      true

exclude:
  - README.md
  - config.rb
  - .sass-cache

markdown:  kramdown

github_project_url: https://github.com/keithamus/Tempus
github_raw_project_url: https://github.com/keithamus/Tempus
github_url: https://github.com/keithamus/tempus-js.com
github_raw_url: https://raw.github.com/keithamus/tempus-js.com

disqus_shortname: tempus

authors:
  keithamus: 
      name: Keith Cirkel
      gravatar: 5cf481ac043b5ca0ea05ccdd70e677b2
      description: |
        JavaScript developer, creator of Tempus, as well as other libraries,
        such as <a href="http://keithcirkel.co.uk/jwerty/">jwerty</a>, and 
        <a href="http://keithcirkel.co.uk/R.js/">R.js</a>.
      github: keithamus
      twitter: keithamus
      linkedin: http://www.linkedin.com/in/keithcirkel

tempus_version: 0.1.0

api_version: 0.2
api:
  - title: Top Level
    functions: 

      - title: Tempus
        description: 'Accepts a date, and returns that date as a Tempus object'
        category: core
        tags:
          - v0.1
        signatures:
          - signature: '[ new ]Tempus( )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object with the date set to the current date & time

          - signature: '[ new ]Tempus( int_timestamp )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object with the date as 
              <var>int_timestamp</var> seconds from the Epoch 
              (Thu Jan 01 1970 00:00:00 GMT+0000)

          - signature: '[ new ]Tempus( year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]])'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object with the date values from the 
              <var>arguments</var>.

          - signature: '[ new ]Tempus( tempus_or_date_object )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object, cloning the date values from 
              <var>tempus_or_date_object</var>

          - signature: '[ new ]Tempus( date_string [, formatter_string ] )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object from a recognisable 
              <var>date_string</var> such as 
              "2011-01-01T12:00:00.000+0000". If 
              <var>formatter_string</var> is available, it will use this 
              as the <a href="/docs/reverse-formatting">reverse-formatter</a> 
              to parse <var>date_string</var> with

          - signature: '[ new ]Tempus( date_string, array_of_formatter_strings )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object by running 
              <var>date_string</var> through 
              <var>array_of_formatter_strings</var>
              (see <a href="/docs/reverse-formatting">reverse-formatting</a>)

          - signature: '[ new ]Tempus( array_of_arguments )'
            returns: this
            version: 0.1
            description: |
              Creates a new Tempus object, extrapolating 
              <var>array_of_arguments</var> into a set of arguments, 
              similar to the above signatures

      - title: now
        description: 'Returns the milliseconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)'
        category: core
        tags:
          - v0.1
        signatures:
          - signature: 'Tempus.now( )'
            returns: Number
            version: 0.1
            description: |
              Returns the milliseconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)


      - title: addParser
        description: 'Adds a parser function to the <a href="/api/set/">set</a> method'
        tags:
          - v0.1
        category: extending
        signatures:
          - signature: 'Tempus.addParser( testerFn , parserFn [, argumentLength], arg1Type [, arg2Type [, ... argNType ] ] )'
            version: 0.1
            description: |
              Adds a parser to the <a href="/api/set/">set</a>, which when all 
              of the <var>argNType</var> arguments match the arguments 
              called from set, and <var>testerFn</var> passes, 
              <var>parserFn</var> will run.

      - title: addLocale
        description: 'Adds a locale to the list of locales available for Tempus'
        tags:
          - v0.2
          - i18n
        category: extending
        signatures:
          - signature: 'Tempus.addLocale( localeNameString , fullMonthsArray, shortMonthsArray, fullDaysArray, shortDaysArray, ampmArray )'
            version: 0.2
            description: |
              Adds a locale of <var>localeName</var> to Tempus' list of locales.

      - title: addTimeFormat
        description: 'Adds a time format for Tempus to use in toString and reverse formatting'
        tags:
          - v0.2
        category: extending
        signatures:
          - signature: 'Tempus.addTimeFormat( formatNameString , formatString )'
            version: 0.2
            description: |
              Adds a time format of <var>formatNameString</var>, with the format
              of <var>formatString</var> to Tempus' list of time formats.
              <var>formatString</var> should be an strptime style string, as 
              used for custom dates in <a href="/api/toString">toString</a>.
          - signature: 'Tempus.addTimeFormat( formatsObject )'
            version: 0.2
            description: |
              Adds a time format for each property inside 
              <var>formatsObject</var>, given that the <var>key</var> is a 
              <var>formatNameString</var> and the value is a 
              <var>formatString</var>.

  - title: Utility
    functions: 

      - title: realTypeOf
        description: "Returns the type of an object, more precise than 'typeof'"
        tags:
          - v0.1
        category: util
        signatures:
          - signature: 'Tempus.util.realTypeOf( mixed_variable )'
            returns: string
            version: 0.1
            description: |
                Returns the real type of <var>mixed_variable</var>, as 
                a lower case string, for example 'object', 'array', 'regexp'

      - title: arrIndexOf
        description: "Returns the index of which a variable appears in an array"
        tags:
          - v0.1
        category: util
        signatures:
          - signature: 'Tempus.util.arrIndexOf( array_haystack, mixed_needle )'
            returns: number
            version: 0.1
            description: |
                Returns the index at which <var>mixed_needle</var> 
                appears in <var>array_haystack</var>. If 
                <var>mixed_needle</var> is not found, <strong>-1</strong>
                is returned

      - title: getOrdinal
        description: "Returns the ordinal suffix of a given number"
        tags:
          - v0.1
          - i18n
        category: util
        signatures:
          - signature: 'Tempus.util.getOrdinal( number )'
            returns: string
            version: 0.1
            description: |
                Returns the ordinal suffix of <var>number</var>, for example, if 
                <var>number</var> is 1, the string returned is 'st'.

      - title: stringPad
        description: "Returns a string padded with extra leading characters"
        tags:
          - v0.1
        category: util
        signatures:
          - signature: 'Tempus.util.stringPad( the_string, number_width [, padString ] )'
            returns: string
            version: 0.1
            description: |
                Returns <var>the_string</var>, padding to the left with the 
                <var>padString</var> character until <var>the_string</var> is 
                <var>number_width</var> long. If not supplied, <var>padString</var>
                is '0'.

  - title: Instance Core
    functions: 

      - title: set
        description: Sets the Tempus instances' date to the arguments passed
        tags:
          - v0.1
        category: core
        signatures:
          - signature: '.set( )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus date set to the current date & time. This is the 
              same as using <code>.set( Tempus.now() )</code>

          - signature: '.set( int_timestamp )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus date as <var>int_timestamp</var> seconds 
              from the Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

          - signature: '.set( year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]])'
            returns: this
            version: 0.1
            description: |
              Set the Tempus date to values from the <var>arguments</var>.

          - signature: '.set( tempus_or_date_object )'
            returns: this
            version: 0.1
            description: |
              Clones the date values from <var>tempus_or_date_object</var>

          - signature: '.set( date_string [, formatter_string ] )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus date to a recognisable 
              <var>date_string</var> such as 
              "2011-01-01T12:00:00.000+0000". If 
              <var>formatter_string</var> is available, it will use this 
              as the <a href="/docs/reverse-formatting">reverse-formatter</a> 
              to parse <var>date_string</var> with

          - signature: '.set( date_string, array_of_formatter_strings )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus date to a recognisable date by running 
              <var>date_string</var> through 
              <var>array_of_formatter_strings</var>
              (see <a href="/docs/reverse-formatting">reverse-formatting</a>)

          - signature: '.set( array_of_arguments )'
            returns: this
            version: 0.1
            description: |
              Sets the Tempus object to a date, extrapolating 
              <var>array_of_arguments</var> into a set of arguments, 
              similar to the above signatures

      - title: clone
        description: Creates a new version of the Tempus object
        tags:
          - v0.1
        category: core
        signatures:
          - signature: '.clone( )'
            returns: this
            version: 0.1
            description: |
              Return a new copy of the Tempus object, that can be modified 
              without affecting the original

      - title: copy
        description: Copies the date information from the Tempus object provided
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.copy( tempus_object )'
            returns: this
            version: 0.1
            description: |
              Copies all of the date information from <var>tempus_object</var> 
              into this current instance.

      - title: timeStamp
        description: Get or set the number of seconds since Epoch
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.timeStamp( )'
            returns: number
            version: 0.1
            description: |
              Returns the seconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

          - signature: '.timeStamp( number_of_seconds_since_epoch )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_of_seconds_since_epoch</var>

      - title: getTimeStamp
        description: Get the number of seconds since Epoch
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getTimeStamp( )'
            returns: number
            version: 0.1
            description: |
              Returns the seconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

      - title: setTimeStamp
        description: Set the number of seconds since Epoch
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimeStamp( number_of_seconds_since_epoch )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_of_seconds_since_epoch</var>

      - title: addTimeStamp
        description: Add a number of seconds to the total seconds since Epoch
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addTimeStamp( number_of_seconds )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_of_seconds</var> to the number of seconds since 
              epoch, changing the date. Similar to 
              <a href="/api/addSeconds">addSeconds</a>

      - title: subTimeStamp
        description: Subtract a number of seconds to the total seconds since Epoch
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subTimeStamp( number_of_seconds )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_of_seconds</var> to the number of seconds 
              since epoch, changing the date. Similar to 
              <a href="/api/subSeconds">subSeconds</a>

      - title: time
        description: Get or set the number of milliseconds since Epoch
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.time( )'
            returns: number
            version: 0.1
            description: |
              Returns the milliseconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

          - signature: '.time( number_of_milliseconds_since_epoch )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_of_milliseconds_since_epoch</var>

      - title: getTime
        description: Get the number of seconds since Epoch
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getTime( )'
            returns: number
            version: 0.1
            description: |
              Returns the milliseconds since Epoch (Thu Jan 01 1970 00:00:00 GMT+0000)

      - title: setTime
        description: Set the number of seconds since Epoch
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTime( number_of_milliseconds_since_epoch )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_of_milliseconds_since_epoch</var>

      - title: addTime
        description: Add a number of milliseconds to the total milliseconds since Epoch
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addTime( number_of_milliseconds )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_of_milliseconds</var> to the number of 
              milliseconds since epoch, changing the date. Similar to 
              <a href="/api/addSeconds">addMilliSeconds</a>

      - title: subTime
        description: Subtract a number of milliseconds to the total milliseconds since Epoch
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subTime( number_of_seconds )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_of_milliseconds</var> to the number of 
              milliseconds since epoch, changing the date. Similar to 
              <a href="/api/subSeconds">subMilliSeconds</a>

  - title: Instance Timezone
    functions: 

      - title: timezone
        description: "Gets or sets the timezone as a string, e.g '+0100'"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.timezone( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the timezone as a string, for example '+0100'

          - signature: '.timezone( string_timezone )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>string_timezone</var>. 
              <var>string_timezone</var> should be represented as a symbol, 
              followed 4 numbers, optionally split by a character, 
              examples include: '+0800', '+04:00', '-01,00'

          - signature: '.timezone( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezoneOffset to <var>number_timezoneOffset</var>. For 
              more on timezoneOffsets read 
              <a href="/api/timezoneOffset">timezoneOffset</a>

      - title: getTimezone
        description: "Gets timezone as a string, e.g '+0100'"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getTimezone( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the timezone as a string, for example '+0100'

      - title: setTimezone
        description: "Sets the timezone as a string, e.g '+0100'"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimezone( string_timezone )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>string_timezone</var>. 
              <var>string_timezone</var> should be represented as a symbol, 
              followed 4 numbers, optionally split by a character, 
              examples include: '+0800', '+04:00', '-01,00'

          - signature: '.setTimezone( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezoneOffset to <var>number_timezoneOffset</var>. For 
              more on timezoneOffsets read 
              <a href="/api/timezoneOffset">timezoneOffset</a>

      - title: ISOTimezone
        description: "Gets or sets the timezone as a string, e.g '+01:00'"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.ISOTimezone( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the timezone as a string, for example '+01:00'. Note the
              colon to delimit hours and minutes. If you don't want this, use
              <a href="/api/timezone">timezone</a>

          - signature: '.ISOTimezone( string_timezone )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>string_timezone</var>. 
              <var>string_timezone</var> should be represented as a symbol, 
              followed 4 numbers, optionally split by a character, 
              examples include: '+0800', '+04:00', '-01,00'

          - signature: '.ISOTimezone( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezoneOffset to <var>number_timezoneOffset</var>. For 
              more on timezoneOffsets read 
              <a href="/api/timezoneOffset">timezoneOffset</a>

      - title: getISOTimezone
        description: "Gets timezone as a string, e.g '+01:00'"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getISOTimezone( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the timezone as a string, for example '+01:00'. Note the
              colon to delimit hours and minutes. If you don't want this, use
              <a href="/api/timezone">timezone</a>

      - title: setISOTimezone
        description: "Sets the timezone as a string, e.g '+01:00'"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setISOTimezone( string_timezone )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>string_timezone</var>. 
              <var>string_timezone</var> should be represented as a symbol, 
              followed 4 numbers, optionally split by a character, 
              examples include: '+0800', '+04:00', '-01,00'

          - signature: '.setISOTimezone( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezoneOffset to <var>number_timezoneOffset</var>. For 
              more on timezoneOffsets read 
              <a href="/api/timezoneOffset">timezoneOffset</a>

      - title: timezoneOffset
        description: "Gets or sets the timezone as a timezone offset, e.g -60"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.timezoneOffset( )'
            returns: number
            version: 0.1
            description: |
              Gets the timezone offset. Timezone offset is the number of minutes 
              away from GMT, for example -60 is the equivalent of GMT+01:00

          - signature: '.timezoneOffset( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>number_timezoneOffset</var>. 
              <var>number_timezoneOffset</var> is the number of minutes away 
              from GMT, for example -60 is the equivalent of GMT+01:00

      - title: getTimezoneOffset
        description: "Gets timezone as a timezone offset, e.g -60"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getTimezoneOffset( )'
            returns: number
            version: 0.1
            description: |
              Gets the timezone offset. Timezone offset is the number of minutes 
              away from GMT, for example -60 is the equivalent of GMT+01:00


      - title: setTimezoneOffset
        description: "Sets the timezone as a timezone offset, e.g -60"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimezoneOffset( number_timezoneOffset )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to <var>number_timezoneOffset</var>. 
              <var>number_timezoneOffset</var> is the number of minutes away 
              from GMT, for example -60 is the equivalent of GMT+01:00

      - title: setTimezoneToLocale
        description: "Sets the timezone to the local environments timezone"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimezoneToLocale( )'
            returns: this
            version: 0.1
            description: |
              Sets the timezone to the local environments timezone
      - title: isDST
        description: "Returns true if the date is within the local environments Daylight Savings period"
        tags:
          - v0.1
        category: assertions
        signatures:
          - signature: '.isDST( )'
            returns: boolean
            version: 0.1
            description: |
              Returns true if the date is within the local environments 
              Daylight Savings period, and false if not

  - title: Instance Year Methods
    functions: 

      - title: century
        description: "Gets or sets the century"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.century( )'
            returns: number
            version: 0.1
            description: |
              Get the century

          - signature: '.century( number_century )'
            returns: this
            version: 0.1
            description: |
              Set the century to <var>number_century</var>

      - title: getCentury
        description: "Gets the century"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getCentury( )'
            returns: number
            version: 0.1
            description: |
              Get the century

      - title: setCentury
        description: "Sets the century"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setCentury( number_century )'
            returns: this
            version: 0.1
            description: |
              Set the century to <var>number_century</var>

      - title: addCentury
        description: "Increase the century"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addCentury( [number_century] )'
            returns: this
            version: 0.1
            description: |
              Increases the century by <var>number_century</var>. If 
              <var>number_century</var> is not present, it will default to 1

      - title: subCentury
        description: "Increase the century"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subCentury( [number_century] )'
            returns: this
            version: 0.1
            description: |
              Decreases the century by <var>number_century</var>. If 
              <var>number_century</var> is not present, it will default to 1

      - title: fullYear
        description: "Set or get the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.fullYear( )'
            returns: number
            version: 0.1
            description: |
              Get the full 4 digit year, i.e 2012

          - signature: '.fullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the full 4 digit year to <var>number_year</var>

      - title: setFullYear
        description: "Set the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setFullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the full 4 digit year to <var>number_year</var>

      - title: getFullYear
        description: "Get the full, 4 digit year"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getFullYear( )'
            returns: number
            version: 0.1
            description: |
              Get the full 4 digit year, i.e 2012

      - title: addFullYear
        description: "Increase the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addFullYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Increases the year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: subFullYear
        description: "Decrease the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subFullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Decreases the year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: year
        description: "Set or get the short, 2 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.year( )'
            returns: number
            version: 0.1
            description: |
              Get the 2 digit year, i.e 12

          - signature: '.year( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the 2 digit year to <var>number_year</var>

      - title: setYear
        description: "Set the short, 2 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the 2 digit year to <var>number_year</var>

      - title: getYear
        description: "Get the short, 2 digit year"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getYear( )'
            returns: number
            version: 0.1
            description: |
              Get the 2 digit year, i.e 12

      - title: addYear
        description: "Increase the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Increases the year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: subYear
        description: "Decrease the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Decreases the year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: UTCFullYear
        description: "Set or get the full, 4 digit UTC year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCFullYear( )'
            returns: number
            version: 0.1
            description: |
              Get the full 4 digit UTC year, i.e 2012

          - signature: '.UTCFullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the full 4 digit UTC year to <var>number_year</var>

      - title: setUTCFullYear
        description: "Set the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCFullYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the full 4 digit UTC year to <var>number_year</var>

      - title: getUTCFullYear
        description: "Get the full, 4 digit UTC year"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCFullYear( )'
            returns: number
            version: 0.1
            description: |
              Get the full 4 digit UTC year, i.e 2012

      - title: addUTCFullYear
        description: "Increase the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCFullYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Increases the UTC year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: subUTCFullYear
        description: "Decrease the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCFullYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Decreases the UTC year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: UTCYear
        description: "Set or get the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCYear( )'
            returns: number
            version: 0.1
            description: |
              Get the 2 digit UTC year, i.e 12

          - signature: '.UTCYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the 2 digit UTC year to <var>number_year</var>

      - title: setUTCYear
        description: "Set the full, 4 digit year"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCYear( number_year )'
            returns: this
            version: 0.1
            description: |
              Set the 2 digit UTC year to <var>number_year</var>

      - title: getUTCYear
        description: "Get the 2 digit UTC year"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCYear( )'
            returns: number
            version: 0.1
            description: |
              Get the 2 digit year, i.e 12

      - title: addUTCYear
        description: "Increase the UTC year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Increases the UTC year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: subUTCYear
        description: "Decrease the year"
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subYear( [number_year] )'
            returns: this
            version: 0.1
            description: |
              Decreases the UTC year by <var>number_year</var>. If 
              <var>number_year</var> is not present, it will default to 1

      - title: isLeapYear
        description: "Determine if the set year is a leap year"
        tags:
          - v0.1
        category: assertions
        signatures:
          - signature: '.isLeapYear( [number_leap_year] )'
            returns: boolean
            version: 0.1
            description: |
              If the <var>number_leap_year</var> is a leap year, then 
              <var>true</var> will be returned, otherwise <var>false</var> will
              be returned. If <var>number_leap_year</var> is not present, it 
              will default to <code>this.fullYear()</code>.ds</a>

  - title: Instance Month
    functions: 

      - title: month
        description: "Gets or sets the month"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.month( )'
            returns: number
            version: 0.1
            description: |
              Gets the zero-index month (0 = Jan ... 11 = Dec)

          - signature: '.month( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the zero-index month to <var>number_month</var> (0 = Jan ... 11 = Dec)

      - title: getMonth
        description: "Gets the month"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the zero-index month (0 = Jan ... 11 = Dec)

      - title: setMonth
        description: "Sets the month"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setMonth( number_month )'
            returns: this
            version: 0.1
            description: |
              Sets the zero-index month to <var>number_month</var> (0 = Jan ... 11 = Dec)

      - title: addMonth
        description: Add a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_month</var> from the set month. If 
              <var>number_month</var> is not present, it will default to 1

      - title: subMonth
        description: Subtract a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_month</var> from the set month. If 
              <var>number_month</var> is not present, it will default to 1

      - title: UTCMonth
        description: "Gets or sets the month as UTC"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the zero-index UTC month (0 = Jan ... 11 = Dec)

          - signature: '.UTCMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the zero-index UTC month to <var>number_month</var> (0 = Jan ... 11 = Dec)

      - title: getUTCMonth
        description: "Gets the month as UTC"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the zero-index UTC month (0 = Jan ... 11 = Dec)

      - title: setUTCMonth
        description: "Sets the month as UTC"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCMonth( number_month )'
            returns: this
            version: 0.1
            description: |
              Sets the zero-index UTC month to <var>number_month</var> (0 = Jan ... 11 = Dec)

      - title: addUTCMonth
        description: Add a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_month</var> from the set UTC month. If 
              <var>number_month</var> is not present, it will default to 1
              Similar to <a href="/api/addMonth">addMonth</a>.

      - title: subUTCMonth
        description: Subtract a number of UTC months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_month</var> from the set UTC month. If 
              <var>number_month</var> is not present, it will default to 1
              Similar to <a href="/api/subMonth">subMonth</a>.

      - title: oneIndexedMonth
        description: "Gets or sets the month as a 1-indexed integer (1-12)"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.oneIndexedMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the 1-index month (1 = Jan ... 12 = Dec)

          - signature: '.oneIndexedMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the 1-index month to <var>number_month</var> (1 = Jan ... 12 = Dec)

      - title: getOneIndexedMonth
        description: "Gets the month as a 1-indexed integer (1-12)"
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getOneIndexedMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the 1-index month (1 = Jan ... 12 = Dec)

      - title: setOneIndexedMonth
        description: "Sets the month, as a 1-indexed integer (1-12)"
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setOneIndexedMonth( number_month )'
            returns: this
            version: 0.1
            description: |
              Sets the 1-index month to <var>number_month</var> (1 = Jan ... 12 = Dec)

      - title: addOneIndexedMonth
        description: Add a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addOneIndexedMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_month</var> from the set month. If 
              <var>number_month</var> is not present, it will default to 1.
              Similar to <a href="/api/addMonth">addMonth</a>.

      - title: subOneIndexedMonth
        description: Subtract a number of months from the set month
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subOneIndexedMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_month</var> from the set month. If
              <var>number_month</var> is not present, it will default to 1.
              Similar to <a href="/api/subMonth">subMonth</a>.

      - title: UTCOneIndexedMonth
        description: "Gets or sets the UTC month as a 1-indexed integer (1-12)"
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.UTCOneIndexedMonth( )'
            returns: number
            version: 0.2
            description: |
              Gets the UTC 1-index month (1 = Jan ... 12 = Dec)

          - signature: '.UTCOneIndexedMonth( [number_month] )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC 1-index month to <var>number_month</var> (1 = Jan ... 12 = Dec)

      - title: getUTCOneIndexedMonth
        description: "Gets the UTC month as a 1-indexed integer (1-12)"
        tags:
          - v0.2
        category: properties
        signatures:
          - signature: '.getUTCOneIndexedMonth( )'
            returns: number
            version: 0.2
            description: |
              Gets the UTC 1-index month (1 = Jan ... 12 = Dec)

      - title: setUTCOneIndexedMonth
        description: "Sets the UTC month, as a 1-indexed integer (1-12)"
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.setUTCOneIndexedMonth( number_month )'
            returns: this
            version: 0.2
            description: |
              Sets the UTC 1-index month to <var>number_month</var> 
              (1 = Jan ... 12 = Dec)

      - title: addUTCOneIndexedMonth
        description: Add a number of months from the set UTC month
        tags:
          - v0.2
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCOneIndexedMonth( [number_month] )'
            returns: this
            version: 0.2
            description: |
              Adds <var>number_month</var> from the set UTC month. If 
              <var>number_month</var> is not present, it will default to 1.
              Similar to <a href="/api/addMonth">addMonth</a>.

      - title: subUTCOneIndexedMonth
        description: Subtract a number of months from the set UTC month
        tags:
          - v0.2
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCOneIndexedMonth( [number_month] )'
            returns: this
            version: 0.2
            description: |
              Subtracts <var>number_month</var> from the set UTC month. If
              <var>number_month</var> is not present, it will default to 1.
              Similar to <a href="/api/subMonth">subMonth</a>.

      - title: getFullMonthName
        description: Get the long month name (January - December)
        tags:
          - v0.1
          - culture
        category: properties
        signatures:
          - signature: '.getFullMonthName( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the full month name. For example, if the month is 
              January (0), getMonthName will return 'January' in the default 
              culture (English).

      - title: getMonthName
        description: Get the abbreviated month name (Jan - Dec)
        tags:
          - v0.1
          - culture
        category: properties
        signatures:
          - signature: '.getMonthName( )'
            returns: string
            version: 0.1
            description: |
              Retrieves the month name, as the "abbreviated" version of 
              the month. For example, if the month is January (0), 
              getMonthName will return 'Jan' in the default culture (English).

  - title: Instance Week
    functions: 

      - title: week
        description: "Gets or sets the week"
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.week( )'
            returns: number
            version: 0.1
            description: |
              Gets the week of the year (0 - 53)

          - signature: '.week( [number_week] )'
            returns: this
            version: 0.1
            description: |
              Sets the date to the monday beginning the week of 
              <var>number_week</var>.

      - title: getWeek
        description: "Gets the week"
        tags:
          - v0.2
        category: properties
        signatures:
          - signature: '.getWeek( )'
            returns: number
            version: 0.1
            description: |
              Gets the week of the year (0 - 53)

      - title: setWeek
        description: "Sets the week"
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.setWeek( number_week )'
            returns: this
            version: 0.1
            description: |
              Sets the date to the monday beginning the week of 
              <var>number_week</var>.

      - title: addWeek
        description: Add a number of weeks from the week
        tags:
          - v0.2
          - math
        category: manipulation
        signatures:
          - signature: '.addWeek( [number_week] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_week</var> from the set week. If 
              <var>number_week</var> is not present, it will default to 1. It 
              will also reset the day to the Monday of the new week.

      - title: subWeek
        description: Subtract a number of weeks from the set week
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subWeek( [number_week] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_week</var> from the set week. If 
              <var>number_week</var> is not present, it will default to 1. It 
              will also reset the day to the Monday of the new week.

      - title: getWeekOrdinal
        description: Get's the ordinal suffix of the set week
        tags:
          - v0.1
          - culture
        category: properties
        signatures:
          - signature: '.getWeekOrdinal( )'
            returns: string
            version: 0.1
            description: |
                Gets the weeks ordinal suffix. In the default culture 
                (English), this means either "th", "st", or "rd" is returned. 
                For example, if <a href="/api/getWeek">getWeek()</a> returns 3,
                then getWeekOrdinal() will return "rd".

      - title: eachWeekOfMonth
        description: Iterate through every week in a month
        tags:
          - v0.2
        category: iterators
        signatures:
          - signature: '.eachWeekOfMonth( function_iterator )'
            returns: this
            version: 0.1
            description: |
                This will start with the first week of the month, and loop 
                through, incrimenting by 1 until the last week of the month, 
                running <var>function_iterator</var> for every iteration.
                <var>function_iterator</var> should expect the arguments to be
                <var>[number_week, tempus_object_set_to_week]</var>. For more on
                iterators, see the <a href="/docs/method-type-rundown#iterators">
                iterators</a> documentation

      - title: eachWeekOfYear
        description: Iterate through every week in a year
        tags:
          - v0.2
        category: iterators
        signatures:
          - signature: '.eachWeekOfYear( function_iterator )'
            returns: this
            version: 0.1
            description: |
                This will start with the first week of the year, and loop 
                through, incrimenting by 1 until the last week of the year, 
                running <var>function_iterator</var> for every iteration.
                <var>function_iterator</var> should expect the arguments to be
                <var>[number_week, tempus_object_set_to_week]</var>. For more on
                iterators, see the <a href="/docs/method-type-rundown#iterators">
                iterators</a> documentation

  - title: Instance Date Methods
    functions: 

      - title: date
        description: Gets or sets the date
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.date( )'
            returns: number
            version: 0.1
            description: |
              Gets the date.

          - signature: '.date( number_date )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_date</var>

      - title: getDate
        description: Gets the date
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getDate( )'
            returns: number
            version: 0.1
            description: |
              Gets the date.

      - title: setDate
        description: Sets the date
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setDate( number_date )'
            returns: this
            version: 0.1
            description: |
              Sets the date to <var>number_date</var>

      - title: addDate
        description: Adds a number of days to the set date
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addDate( [number_date] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_date</var> from the set date. If 
              <var>number_date</var> is not present, it will default to 1.

      - title: addDate
        description: Subtracts a number of dasy to the set date
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subDate( [number_date] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_date</var> from the set date. If 
              <var>number_date</var> is not present, it will default to 1.

      - title: UTCDate
        description: Gets or sets the UTC date
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCDate( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC date.

          - signature: '.UTCDate( number_date )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC date to <var>number_date</var>.

      - title: getUTCDate
        description: Gets the UTC date
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCDate( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC date.

      - title: setUTCDate
        description: Sets the UTC date
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCDate( number_date )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC date to <var>number_date</var>.

      - title: addUTCDate
        description: Adds a number of days to the set UTC date
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCDate( [number_date] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_date</var> from the set UTC date. If 
              <var>number_date</var> is not present, it will default to 1.

      - title: subUTCDate
        description: Subtracts a number of days to the set UTC date
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCDate( [number_date] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_date</var> from the set date. If 
              <var>number_date</var> is not present, it will default to 1.

      - title: getDateOrdinal
        description: Get's the ordinal suffix of the set date
        tags:
          - v0.1
          - culture
        category: properties
        signatures:
          - signature: '.getDateOrdinal( )'
            returns: string
            version: 0.1
            description: |
                Gets the set dates ordinal suffix. In the default culture 
                (English), this means either "th", "st", or "rd" is returned. 
                For example, if <a href="/api/getDate">getDate()</a> returns 3,
                then getDateOrdinal() will return "rd".

  - title: Instance Day Methods
    functions:

      - title: day
        description: Gets or sets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.day( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the week, from 0 to 6, 0 being Sunday, and
              6 being Saturday.

          - signature: '.day( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the week, from 0 to 6, 0 being Sunday, and
              6 being Saturday.

      - title: getDay
        description: Gets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getDay( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the week, from 0 to 6, 0 being Sunday, and
              6 being Saturday.

      - title: setDay
        description: Sets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.setDay( number_day )'
            returns: this
            version: 0.2
            description: |
              Sets the day of the week, from 0 to 6, 0 being Sunday, and
              6 being Saturday.

      - title: addDay
        description: Adds a number of days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addDay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> from the set day. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: subDay
        description: Subtracts a number of days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subDay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> from the set day. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: ISODay
        description: Gets or sets the day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.ISODay( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the week, from 1 to 7, 1 being Monday, and
              7 being Sunday.

          - signature: '.ISODay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the week, from 1 to 7, 1 being Monday, and
              7 being Sunday.

      - title: getISODay
        description: Gets the day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getISODay( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the week, from 1 to 7, 1 being Monday, and
              7 being Sunday.

      - title: setISODay
        description: Sets the day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setISODay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the week, from 1 to 7, 1 being Monday, and
              7 being Sunday.

      - title: addISODay
        description: Adds a number of days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addISODay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> from the set day. If 
              <var>number_day</var> is not present, it will default to 1.
              Similar to <a href="/api/addDay">addDay</a>

      - title: subISODay
        description: Subtracts a number of days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subISODay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> from the set day. If 
              <var>number_day</var> is not present, it will default to 1.
              Similar to <a href="/api/addDay">addDay</a>

      - title: UTCDay
        description: Gets or sets the UTC day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCDay( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC day of the week, from 0 to 6, 0 being Sunday,
              and 6 being Saturday.

          - signature: '.UTCDay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC day of the week, from 0 to 6, 0 being Sunday,
              and 6 being Saturday.

      - title: getUTCDay
        description: Gets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCDay( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC day of the week, from 0 to 6, 0 being Sunday,
              and 6 being Saturday.

      - title: setUTCDay
        description: Sets the day of week (0 = Sun - 6 = Sat)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCDay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC day of the week, from 0 to 6, 0 being Sunday,
              and 6 being Saturday.

      - title: addUTCDay
        description: Adds a number of UTC days to the set UTC day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCDay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> from the set UTC day. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: subUTCDay
        description: Subtracts a number of UTC days to the set day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCDay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> from the set UTC day. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: UTCISODay
        description: Gets or sets the UTC day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCISODay( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC day of the week, from 1 to 7, 1 being Monday,
              and 7 being Sunday.

          - signature: '.UTCISODay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC day of the week, from 1 to 7, 1 being Monday,
              and 7 being Sunday.

      - title: getUTCISODay
        description: Gets the UTC day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCISODay( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC day of the week, from 1 to 7, 1 being Monday,
              and 7 being Sunday.

      - title: setUTCISODay
        description: Sets the UTC day of week (1 = Mon - 7 = Sun)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCISODay( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC day of the week, from 1 to 7, 1 being Monday,
              and 7 being Sunday.

      - title: addUTCISODay
        description: Adds a number of UTC days to the set UTC day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCISODay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> from the set UTC day. If 
              <var>number_day</var> is not present, it will default to 1.
              Similar to <a href="/api/addUTCDay">addUTCDay</a>

      - title: subUTCISODay
        description: Subtracts a number of UTC days to the set UTC day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCISODay( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> from the set UTC day. If 
              <var>number_day</var> is not present, it will default to 1.
              Similar to <a href="/api/addUTCDay">addUTCDay</a>

      - title: dayOfYear
        description: Gets or sets the day of the year (1 to 366)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.dayOfYear( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the year, as a number from 1 to 366.

          - signature: '.dayOfYear( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the year to <var>number_day</var>, which 
              should be a number from 1 to 366.

      - title: getDayOfYear
        description: Gets the day of the year (1 to 366)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getDayOfYear( )'
            returns: number
            version: 0.1
            description: |
              Gets the day of the year, as a number from 1 to 366.

      - title: setDayOfYear
        description: Sets the day of the year (1 to 366)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setDayOfYear( number_day )'
            returns: this
            version: 0.1
            description: |
              Sets the day of the year to <var>number_day</var>, which 
              should be a number from 1 to 366.

      - title: addDayOfYear
        description: Adds a number of days to the set day of the year
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addDayOfYear( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_day</var> to the set day of the year. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: subDayOfYear
        description: Subtracts a number of days to the set day of the year
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subDayOfYear( [number_day] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_day</var> to the set day of the year. If 
              <var>number_day</var> is not present, it will default to 1.

      - title: getLastDayOfMonth
        description: Gets the last day of the month (28 - 31)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getLastDayOfMonth( )'
            returns: number
            version: 0.1
            description: |
              Gets the last day of the month (28 - 31), for example, if the 
              month is February <code>.getLastDayOfMonth()</code> will return 
              <code>28</code>, for December: <code>31</code>.

      - title: getDayName
        description: Get the short day name ('Mon' to 'Sun') 
        tags:
          - v0.1
          - i18n
        category: properties
        signatures:
          - signature: '.getDayName( )'
            returns: string
            version: 0.1
            description: |
              Gets the name of the day, as a shortened version of the 
              day. For the English locale, this is a 3 letter representation of 
              the full day name, from 'Mon' to 'Sun'

      - title: getFullDayName
        description: Get the full day name ('Monday' to 'Sunday')
        tags:
          - v0.1
          - i18n
        category: properties
        signatures:
          - signature: '.getFullDayName( )'
            returns: this
            version: 0.1
            description: |
              Gets the name of the day, as the full version of the 
              day. For the English locale, this is from 'Monday' to 'Sunday'

      - title: eachDayOfWeek
        description: Iterate through every day in a week (Sun-Sat)
        tags:
          - v0.2
        category: iterators
        signatures:
          - signature: '.eachDayOfWeek( function_iterator )'
            returns: this
            version: 0.2
            description: |
              This will start with Sunday, and loop through each day, 
              incrimenting by 1 until the following Saturday, running 
              <var>function_iterator</var> for every iteration.
              <var>function_iterator</var> should expect the arguments to be
              <var>[number_day_of_week, tempus_object_set_to_day_of_week]</var>.
              For more on iterators, see the 
              <a href="/docs/method-type-rundown#iterators">iterators</a>
              documentation

      - title: eachISODayOfWeek
        description: Iterate through every ISO day in a week (Mon-Sun)
        tags:
          - v0.2
        category: iterators
        signatures:
          - signature: '.eachISODayOfWeek( function_iterator )'
            returns: this
            version: 0.2
            description: |
              This will start with Monday, and loop through each day, 
              incrimenting by 1 until the following Sunday, running 
              <var>function_iterator</var> for every iteration.
              <var>function_iterator</var> should expect the arguments to be
              <var>[number_day_of_week, tempus_object_set_to_day_of_week]</var>.
              For more on iterators, see the 
              <a href="/docs/method-type-rundown#iterators">iterators</a>
              documentation

      - title: eachDayOfMonth
        description: Iterate through every day in a month
        tags:
          - v0.1
        category: iterators
        signatures:
          - signature: '.eachDayOfMonth( function_iterator )'
            returns: this
            version: 0.1
            description: |
              This will start with the first day of the month, and loop 
              through, incrimenting by 1 until the last day of the month, 
              running <var>function_iterator</var> for every iteration.
              <var>function_iterator</var> should expect the arguments to be
              <var>[number_date, tempus_object_set_to_date]</var>. For more on
              iterators, see the <a href="/docs/method-type-rundown#iterators">
              iterators</a> documentation

      - title: eachDayOfYear
        description: Iterate through every day in a year
        tags:
          - v0.1
        category: iterators
        signatures:
          - signature: '.eachDayOfYear( function_iterator )'
            returns: this
            version: 0.1
            description: |
                This will start with the first day of the year, and loop 
                through, incrimenting by 1 until the last day of the year, 
                running <var>function_iterator</var> for every iteration.
                <var>function_iterator</var> should expect the arguments to be
                <var>[number_day_of_year, tempus_object_set_to_day_of_year]</var>.
                For more on iterators, see the 
                <a href="/docs/method-type-rundown#iterators">iterators</a>
                documentation

  - title: Instance Time Methods
    functions: 

      - title: ampm
        description: "Gets or sets the 12 hour time designation, 'am' or 'pm'"
        tags:
          - v0.1
          - i18n
        category: manipulation
        signatures:
          - signature: '.ampm( )'
            returns: string
            version: 0.1
            description: |
              Gets the 12 hour time designation, as a lower case string, in the 
              default locale (English): either 'am' or 'pm'

          - signature: '.ampm( string_am_or_pm )'
            returns: this
            version: 0.1
            description: |
              Sets the 12 hour time designation, to <var>string_am_or_pm</var>, 
              which should be a string of either 'am' or 'pm'. The case is 
              insensitive.

      - title: getampm
        description: "Gets the 12 hour time designation, 'am' or 'pm'"
        tags:
          - v0.1
          - i18n
        category: properties
        signatures:
          - signature: '.getampm( )'
            returns: string
            version: 0.1
            description: |
              Gets the 12 hour time designation, as a lower case string, in the 
              default locale (English): either 'am' or 'pm'

      - title: setampm
        description: "Sets the 12 hour time designation, 'am' or 'pm'"
        tags:
          - v0.1
          - i18n
        category: manipulation
        signatures:
          - signature: '.setampm( string_am_or_pm )'
            returns: this
            version: 0.1
            description: |
              Sets the 12 hour time designation, to <var>string_am_or_pm</var>, 
              which should be a string of either 'am' or 'pm'. The case is 
              insensitive.

      - title: AMPM
        description: "Gets or sets the 12 hour time designation, 'AM' or 'PM'"
        tags:
          - v0.1
          - i18n
        category: manipulation
        signatures:
          - signature: '.AMPM( )'
            returns: string
            version: 0.1
            description: |
              Gets the 12 hour time designation, as an upper case string, in the
              default locale (English): either 'AM' or 'PM'

          - signature: '.AMPM( string_am_or_pm )'
            returns: this
            version: 0.1
            description: |
              Sets the 12 hour time designation, to <var>string_am_or_pm</var>, 
              which should be a string of either 'AM' or 'PM'. The case is 
              insensitive.

      - title: getAMPM
        description: "Gets the 12 hour time designation, 'AM' or 'PM'"
        tags:
          - v0.1
          - i18n
        category: properties
        signatures:
          - signature: '.AMPM( )'
            returns: string
            version: 0.1
            description: |
              Gets the 12 hour time designation, as an upper case string, in the
              default locale (English): either 'AM' or 'PM'

      - title: setAMPM
        description: "Sets the 12 hour time designation, 'AM' or 'PM'"
        tags:
          - v0.1
          - i18n
        category: manipulation
        signatures:
          - signature: '.AMPM( string_am_or_pm )'
            returns: this
            version: 0.1
            description: |
              Sets the 12 hour time designation, to <var>string_am_or_pm</var>, 
              which should be a string of either 'AM' or 'PM'. The case is 
              insensitive.

      - title: setTimeToNow
        description: Set the time to the current time
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setTimeToNow( )'
            returns: this
            version: 0.1
            description: |
              Sets the time to the current time.

      - title: clearTime
        description: Sets the time to 00:00:00
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.clearTime( )'
            returns: this
            version: 0.1
            description: |
              Sets the time to 00:00:00. This is the equivalent of 
              .[timeString](/api/timeString)('00:00:00')

      - title: timeString
        description: Get or set the time as a string representation of NN:NN:NN
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.timeString( )'
            returns: string
            version: 0.1
            description: |
              Gets the time as a representation of NN:NN:NN, for example 
              '12:30:00' for half past 12, or '04:00:05' for 5 seconds past 4am

          - signature: '.timeString( string_time )'
            returns: string
            version: 0.1
            description: |
              Sets the time to <var>string_time</var>, which is a representation
              of NN:NN:NN, for example to set the time to half past 12, 
              <var>string_time</var> should be '12:30:00'.

  - title: Instance Hour Methods
    functions: 

      - title: hours
        description: Gets or sets the hour of the day (0-23)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.hours( )'
            returns: number
            version: 0.1
            description: |
              Gets the hour of the day, from 0 to 23.

          - signature: '.hours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the hour of the day to <var>number_hours</var>, which should 
              be a number from 0 to 23.

      - title: getHours
        description: Gets the hour of the day (0-23)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the hour of the day, from 0 to 23.

      - title: setHours
        description: Sets the hour of the day (0-23)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the hour of the day to <var>number_hours</var>, which should 
              be a number from 0 to 23.

      - title: addHours
        description: Adds a number of hours to the hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1
              
      - title: subHours
        description: Subtracts a number of hours from the hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1

      - title: UTCHours
        description: Gets or sets the UTC hour of the day (0-23)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC hour of the day, from 0 to 23.

          - signature: '.UTCHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC hour of the day to <var>number_hours</var>, which 
              should be a number from 0 to 23.

      - title: getUTCHours
        description: Gets the UTC hour of the day (0-23)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC hour of the day, from 0 to 23.

      - title: setUTCHours
        description: Gets or sets the hour of the day (0-23)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC hour of the day to <var>number_hours</var>, which 
              should be a number from 0 to 23.

      - title: addUTCHours
        description: Adds a number of hours to the UTC hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_hours</var> to the set UTC hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1
              
      - title: subUTCHours
        description: Subtracts a number of hours from the UTC hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1

      - title: ordinalHours
        description: Gets or sets the hour of the day (1-12)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.ordinalHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the hour of the day, from 1 to 12.

          - signature: '.ordinalHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the hour of the day to <var>number_hours</var>, which should 
              be a number from 1 to 12.

      - title: getOrdinalHours
        description: Gets the hour of the day (1-12)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getOrdinalHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the hour of the day, from 1 to 12.

      - title: setOrdinalHours
        description: Sets the hour of the day (1-12)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setOrdinalHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the hour of the day to <var>number_hours</var>, which should 
              be a number from 1 to 12.

      - title: addOrdinalHours
        description: Adds a number of hours to the hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addOrdinalHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1.
              See also <a href="/api/addHours">addHours</a>
              
      - title: subOrdinalHours
        description: Subtracts a number of hours from the hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subOrdinalHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1.
              See also <a href="/api/addHours">subHours</a>

      - title: UTCOrdinalHours
        description: Gets or sets the UTC hour of the day (1-12)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCOrdinalHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC hour of the day, from 1 to 12.

          - signature: '.UTCOrdinalHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC hour of the day to <var>number_hours</var>, which 
              should be a number from 1 to 12.

      - title: getUTCOrdinalHours
        description: Gets the UTC hour of the day (1-12)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCOrdinalHours( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC hour of the day, from 1 to 12.

      - title: setUTCOrdinalHours
        description: Gets or sets the hour of the day (1-12)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCOrdinalHours( number_hours )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC hour of the day to <var>number_hours</var>, which 
              should be a number from 1 to 12.

      - title: addUTCOrdinalHours
        description: Adds a number of hours to the UTC hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCOrdinalHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_hours</var> to the set UTC hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1.
              See also <a href="/api/addUTCHours">addUTCHours</a>
              
      - title: subUTCOrdinalHours
        description: Subtracts a number of hours from the UTC hour of the day
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCOrdinalHours( [number_hours] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_hours</var> to the set hour of the day. If 
              <var>number_hours</var> is not present, it will default to 1.
              See also <a href="/api/subUTCHours">subUTCHours</a>

  - title: Instance Minute Methods
    functions:

      - title: minutes
        description: Get or set the minutes (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.minutes( )'
            returns: number
            version: 0.1
            description: |
              Get minutes (0 to 59)

          - signature: '.minutes( number_minutes )'
            returns: this
            version: 0.1
            description: |
              Set minutes to <var>number_minutes</var>, which should be a number
              between 0 and 59

      - title: getMinutes
        description: Get the minutes (0 to 59)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getMinutes( )'
            returns: number
            version: 0.1
            description: |
              Get minutes (0 to 59)

      - title: setMinutes
        description: Set the minutes (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setMinutes( number_minutes )'
            returns: this
            version: 0.1
            description: |
              Set minutes to <var>number_minutes</var>, which should be a number
              between 0 and 59

      - title: addMinutes
        description: Adds a number of minutes to the set minutes
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addMinutes( [number_minutes] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_minutes</var> to the set minutes. If 
              <var>number_minutes</var> is not present, it will default to 1.

      - title: subMinutes
        description: Subtracts a number of minutes to the set minutes
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subMinutes( [number_minutes] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_minutes</var> to the set minutes. If 
              <var>number_minutes</var> is not present, it will default to 1.

      - title: UTCMinutes
        description: Get or set the UTC minutes (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCMinutes( )'
            returns: number
            version: 0.1
            description: |
              Get the UTC minutes (0 to 59)

          - signature: '.UTCMinutes( number_minutes )'
            returns: this
            version: 0.1
            description: |
              Set the UTC minutes to <var>number_minutes</var>, which should be 
              a number between 0 and 59

      - title: getUTCMinutes
        description: Get the UTC minutes (0 to 59)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCMinutes( )'
            returns: number
            version: 0.1
            description: |
              Get the UTC minutes (0 to 59)

      - title: setUTCMinutes
        description: Set the UTC minutes (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCMinutes( number_minutes )'
            returns: this
            version: 0.1
            description: |
              Set the UTC minutes to <var>number_minutes</var>, which should be 
              a number between 0 and 59

      - title: addUTCMinutes
        description: Adds a number of minutes to the set UTC minutes
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCMinutes( [number_minutes] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_minutes</var> to the set UTC minutes. If 
              <var>number_minutes</var> is not present, it will default to 1.

      - title: subUTCMinutes
        description: Subtracts a number of minutes to the set UTC minutes
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCMinutes( [number_minutes] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_minutes</var> to the set UTC minutes. If 
              <var>number_minutes</var> is not present, it will default to 1.

  - title: Instance Second Methods
    functions: 

      - title: seconds
        description: Gets or sets the seconds (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.seconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the seconds (0 to 59)

          - signature: '.seconds( number_seconds )'
            returns: this
            version: 0.1
            description: |
              Sets the seconds to <var>number_seconds</var>, which should be a
              number between 0 and 59

      - title: getSeconds
        description: Gets the seconds (0 to 59)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getSeconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the seconds (0 to 59)

      - title: setSeconds
        description: Sets the seconds (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setSeconds( number_seconds )'
            returns: this
            version: 0.1
            description: |
              Sets the seconds to <var>number_seconds</var>, which should be a
              number between 0 and 59

      - title: addSeconds
        description: Adds a number of seconds to the set seconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addSeconds( [number_seconds] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_seconds</var> to the set Seconds. If 
              <var>number_seconds</var> is not present, it will default to 1.

      - title: subSeconds
        description: Subtracts a number of seconds to the set seconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subSeconds( [number_seconds] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_seconds</var> to the set Seconds. If 
              <var>number_seconds</var> is not present, it will default to 1.

      - title: UTCSeconds
        description: Gets or sets the UTC seconds (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCSeconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC seconds (0 to 59)

          - signature: '.UTCSeconds( number_seconds )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC seconds to <var>number_seconds</var>, which should be
              a number between 0 and 59

      - title: getUTCSeconds
        description: Gets the UTC seconds (0 to 59)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCSeconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC seconds (0 to 59)

      - title: setUTCSeconds
        description: Sets the UTC seconds (0 to 59)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCSeconds( number_seconds )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC seconds to <var>number_seconds</var>, which should be
              a number between 0 and 59

      - title: addUTCSeconds
        description: Adds a number of seconds to the set UTC seconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCSeconds( [number_seconds] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_seconds</var> to the set UTC seconds. If 
              <var>number_seconds</var> is not present, it will default to 1.

      - title: subUTCSeconds
        description: Subtracts a number of seconds to the set UTC seconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCSeconds( [number_seconds] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_seconds</var> to the set UTC seconds. If 
              <var>number_seconds</var> is not present, it will default to 1.

      - title: secondFractional
        description: Gets or sets the fraction of a second to any number of dp
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.secondFractional( )'
            returns: number
            version: 0.2
            description: |
              Gets the second fraction to largest number of decimal places 
              available. This is currently milliseconds, 3dp (000 to 999)

          - signature: '.secondFractional( number_secondFractional )'
            returns: this
            version: 0.2
            description: |
              Sets the secondFractional to <var>number_secondFractional</var>, 
              which is a 0 padded number of any length. secondFractional will 
              normalise this down to the largest number of decimal places 
              available, which is currently milliseconds (3dp).

      - title: getSecondFractional
        description: Gets the fraction of a second to largest number of dp
        tags:
          - v0.2
        category: properties
        signatures:
          - signature: '.getSecondFractional( )'
            returns: number
            version: 0.2
            description: |
              Gets the second fraction to largest number of decimal places 
              available. This is currently milliseconds, 3dp (000 to 999)

      - title: setSecondFractional
        description: Sets the fraction of a second to any number of dp
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.setsecondFractional( number_secondFractional )'
            returns: this
            version: 0.2
            description: |
              Sets the secondFractional to <var>number_secondFractional</var>, 
              which is a 0 padded number of any length. secondFractional will 
              normalise this down to the largest number of decimal places 
              available, which is currently milliseconds (3dp).

      - title: addSecondFractional
        description: Adds a number of fractional seconds to the set fractional seconds
        tags:
          - v0.2
          - math
        category: manipulation
        signatures:
          - signature: '.addSecondFractional( [number_secondFractional] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_secondFractional</var>, to the set fractional 
              seconds. <var>number_secondFractional</var> must be a 0 padded 
              number of any length. secondFractional will normalise this down to
              the largest number of decimal places available, which is currently
              milliseconds (3dp).

      - title: subSecondFractional
        description: Subtracts a number of fractional seconds to the set fractional seconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subSecondFractional( [number_secondFractional] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_secondFractional</var>, to the set 
              fractional seconds. <var>number_secondFractional</var> must be a 0 
              padded number of any length. secondFractional will normalise this 
              down to the largest number of decimal places available, which is 
              currently milliseconds (3dp).

      - title: UTCSecondFractional
        description: Gets or sets the fraction of a second to any number of dp
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.UTCSecondFractional( )'
            returns: number
            version: 0.2
            description: |
              Gets the second fraction to largest number of decimal places 
              available. This is currently milliseconds, 3dp (000 to 999)

          - signature: '.UTCSecondFractional( number_secondFractional )'
            returns: this
            version: 0.2
            description: |
              Sets the secondFractional to <var>number_secondFractional</var>, 
              which is a 0 padded number of any length. secondFractional will 
              normalise this down to the largest number of decimal places 
              available, which is currently milliseconds (3dp).

      - title: getUTCSecondFractional
        description: Gets the fraction of a second to largest number of dp
        tags:
          - v0.2
        category: properties
        signatures:
          - signature: '.getUTCSecondFractional( )'
            returns: number
            version: 0.2
            description: |
              Gets the second fraction to largest number of decimal places 
              available. This is currently milliseconds, 3dp (000 to 999)

      - title: setUTCSecondFractional
        description: Sets the fraction of a second to any number of dp
        tags:
          - v0.2
        category: manipulation
        signatures:
          - signature: '.setUTCSecondFractional( number_secondFractional )'
            returns: this
            version: 0.2
            description: |
              Sets the secondFractional to <var>number_secondFractional</var>, 
              which is a 0 padded number of any length. secondFractional will 
              normalise this down to the largest number of decimal places 
              available, which is currently milliseconds (3dp).

      - title: addUTCSecondFractional
        description: Adds a number of fractional seconds to the set fractional seconds
        tags:
          - v0.2
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCSecondFractional( [number_secondFractional] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_secondFractional</var>, to the set fractional 
              seconds. <var>number_secondFractional</var> must be a 0 padded 
              number of any length. secondFractional will normalise this down to
              the largest number of decimal places available, which is currently
              milliseconds (3dp).

      - title: subUTCSecondFractional
        description: Subtracts a number of fractional seconds to the set fractional seconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subSecondFractional( [number_secondFractional] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_secondFractional</var>, to the set 
              fractional seconds. <var>number_secondFractional</var> must be a 0 
              padded number of any length. secondFractional will normalise this 
              down to the largest number of decimal places available, which is 
              currently milliseconds (3dp).

  - title: Instance Millisecond Methods
    functions: 

      - title: milliseconds
        description: Gets or sets the milliseconds (0 to 999)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.milliseconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the milliseconds (0 to 999)

          - signature: '.milliseconds( number_milliseconds )'
            returns: this
            version: 0.1
            description: |
              Sets the milliseconds to <var>number_milliseconds</var>, which 
              should be a number between 0 and 999

      - title: getMilliseconds
        description: Gets the milliseconds (0 to 999)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getMilliseconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the milliseconds (0 to 999)

      - title: setMilliseconds
        description: Sets the milliseconds (0 to 999)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setMilliseconds( number_milliseconds )'
            returns: this
            version: 0.1
            description: |
              Sets the milliseconds to <var>number_milliseconds</var>, which 
              should be a number between 0 and 999

      - title: addMilliseconds
        description: Adds a number of milliseconds to the set milliseconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addMilliseconds( [number_milliseconds] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_milliseconds</var> to the set milliseconds. If 
              <var>number_milliseconds</var> is not present, it will default to
              1.

      - title: subMilliseconds
        description: Subtracts a number of milliseconds to the set milliseconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subMilliseconds( [number_milliseconds] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_milliseconds</var> to the set milliseconds. 
              If <var>number_milliseconds</var> is not present, it will default
              to 1.

      - title: UTCMilliseconds
        description: Gets or sets the UTC milliseconds (0 to 999)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCMilliseconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC milliseconds (0 to 999)

          - signature: '.UTCMilliseconds( number_milliseconds )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC milliseconds to <var>number_milliseconds</var>, which should be
              a number between 0 and 999

      - title: getUTCMilliseconds
        description: Gets the UTC milliseconds (0 to 999)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCMilliseconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC milliseconds (0 to 999)

      - title: setUTCMilliseconds
        description: Sets the UTC milliseconds (0 to 999)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCMilliseconds( number_milliseconds )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC milliseconds to <var>number_milliseconds</var>, which should be
              a number between 0 and 999

      - title: addUTCMilliseconds
        description: Adds a number of Milliseconds to the set UTC milliseconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCMilliseconds( [number_milliseconds] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_milliseconds</var> to the set UTC milliseconds. If 
              <var>number_milliseconds</var> is not present, it will default to 1.

      - title: subUTCMilliseconds
        description: Subtracts a number of Milliseconds to the set UTC milliseconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCMilliseconds( [number_milliseconds] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_milliseconds</var> to the set UTC milliseconds. If 
              <var>number_milliseconds</var> is not present, it will default to 1.

  - title: Instance MicroSecond Methods
    functions: 

      - title: microSeconds
        description: Gets or sets the microseconds (0 to 999)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.microSeconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the microSeconds (0 to 999). For now, microseconds is 
              emulated by adding three 0s to milliseconds, until JavaScript 
              supports a higher resolution of time.

          - signature: '.microSeconds( number_microseconds )'
            returns: this
            version: 0.1
            description: |
              Sets the microSeconds to <var>number_microseconds</var>, which 
              should be a number between 0 and 999. For now, microseconds is 
              emulated by adding three 0s to milliseconds, until JavaScript 
              supports a higher resolution of time.

      - title: getMicroSeconds
        description: Gets the microseconds (0 to 999)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getMicroSeconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the microSeconds (0 to 999). For now, microseconds is 
              emulated by adding three 0s to milliseconds, until JavaScript 
              supports a higher resolution of time.

      - title: setMicroSeconds
        description: Sets the microseconds (0 to 999)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setMicroSeconds( number_microseconds )'
            returns: this
            version: 0.1
            description: |
              Sets the microSeconds to <var>number_microseconds</var>, which 
              should be a number between 0 and 999. For now, microseconds is 
              emulated by adding three 0s to milliseconds, until JavaScript 
              supports a higher resolution of time.

      - title: addMicroSeconds
        description: Adds a number of microseconds to the set microseconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addMicroSeconds( [number_microseconds] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_microseconds</var> to the set microSeconds. If 
              <var>number_microseconds</var> is not present, it will default to
              1. For now, microseconds is emulated by adding three 0s to 
              milliseconds, until JavaScript supports a higher resolution of 
              time.

      - title: subMicroSeconds
        description: Subtracts a number of microseconds to the set microseconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subMicroSeconds( [number_microseconds] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_microseconds</var> to the set microSeconds. 
              If <var>number_microseconds</var> is not present, it will default
              to 1. For now, microseconds is emulated by adding three 0s to 
              milliseconds, until JavaScript supports a higher resolution of 
              time.

      - title: UTCMicroSeconds
        description: Gets or sets the UTC microseconds (0 to 999)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.UTCMicroSeconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC microseconds (0 to 999). For now, microseconds is 
              emulated by adding three 0s to milliseconds, until JavaScript 
              supports a higher resolution of time.

          - signature: '.UTCMicroSeconds( number_microseconds )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC microseconds to <var>number_microseconds</var>, which
              should be a number between 0 and 999. For now, microseconds is 
              emulated by adding three 0s to milliseconds, until JavaScript 
              supports a higher resolution of time.

      - title: getUTCMicroSeconds
        description: Gets the UTC microseconds (0 to 999)
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.getUTCMicroSeconds( )'
            returns: number
            version: 0.1
            description: |
              Gets the UTC microseconds (0 to 999). For now, microseconds is 
              emulated by adding three 0s to milliseconds, until JavaScript 
              supports a higher resolution of time.

      - title: setUTCMicroSeconds
        description: Sets the UTC microseconds (0 to 999)
        tags:
          - v0.1
        category: manipulation
        signatures:
          - signature: '.setUTCMicroSeconds( number_microseconds )'
            returns: this
            version: 0.1
            description: |
              Sets the UTC microseconds to <var>number_microseconds</var>, which 
              should be a number between 0 and 999. For now, microseconds is 
              emulated by adding three 0s to milliseconds, until JavaScript 
              supports a higher resolution of time.

      - title: addUTCMicroSeconds
        description: Adds a number of MicroSeconds to the set UTC microseconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.addUTCMicroSeconds( [number_microseconds] )'
            returns: this
            version: 0.1
            description: |
              Adds <var>number_microseconds</var> to the set UTC microseconds. 
              If <var>number_microseconds</var> is not present, it will default 
              to 1. For now, microseconds is emulated by adding three 0s to
              milliseconds, until JavaScript supports a higher resolution of 
              time.

      - title: subUTCMicroSeconds
        description: Subtracts a number of MicroSeconds to the set UTC microseconds
        tags:
          - v0.1
          - math
        category: manipulation
        signatures:
          - signature: '.subUTCMicroSeconds( [number_microseconds] )'
            returns: this
            version: 0.1
            description: |
              Subtracts <var>number_microseconds</var> to the set UTC 
              microseconds. If <var>number_microseconds</var> is not present, 
              it will default to 1. For now, microseconds is emulated by adding 
              three 0s to milliseconds, until JavaScript supports a higher 
              resolution of time.

  - title: Instance String Methods
    functions: 

      - title: toString
        description: Returns a string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toString( )'
            returns: string
            version: 0.1
            description: |
              Returns a string representation of the date, for example
              "Mon Dec 31 2012 23:59:59 +0000"

          - signature: '.toString( string_format )'
            returns: string
            version: 0.1
            description: |
              Returns a string representation of the date, based on the 
              <var>string_format</var>.

          - signature: '.toString( string_format_constant_name )'
            returns: string
            version: 0.1
            description: |
              Returns a string representation of the date, where 
              <var>string_format_constant_name</var> is a predefined string 
              format.

      - title: toJSON
        description: Returns a string representation of the date for use in JSON
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toJSON( )'
            returns: string
            version: 0.1
            description: |
              Returns a string representation of the date for use in JSON, 
              for example "2012-12-31T23:59:59.000+0000". The output is the same
              as <a href="/api/toISOString">toISOString</a>, or 
              <a href="/api/toString">toString</a><code>('ISO')</code>

      - title: toTimeString
        description: Returns a string representation of the time
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toTimeString( )'
            returns: string
            version: 0.1
            description: |
              Returns a string representation of the time and timezone, for 
              example "23:59:59 GMT+0000 (GMT)"

      - title: toLocaleString
        description: Returns a string representation of the datetime in the users locale
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toLocaleString( )'
            returns: string
            version: 0.1
            description: |
              Returns a string representation of the datetime in the users 
              locale, for example "Mon Dec 31 2012 23:59:59 GMT+0000 (GMT)". 
              However, by design this can output different looking string based 
              on the users locale, operating system and browser

      - title: toUTCString
        description: Returns a UTC string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toUTCString( )'
            returns: string
            version: 0.1
            description: |
              Returns a UTC string representation of the date, for example
              "Mon, 31 Dec 2012 23:59:59 GMT". The string will always end in 
              GMT.

      - title: toLocaleTimeString
        description: Returns a string representation of the time in the users locale
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toLocaleTimeString( )'
            returns: string
            version: 0.1
            description: |
              Returns a string representation of the time in the users locale, 
              for example "23:59:59". However, by design this can output 
              different looking string based on the users locale, operating 
              system and browser

      - title: toGMTString
        description: Returns a GMT string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toGMTString( )'
            returns: string
            version: 0.1
            description: |
              Returns a UTC string representation of the date, for example
              "Mon, 31 Dec 2012 23:59:59 GMT". The string will always end in 
              GMT.

      - title: toLocaleDateString
        description: Returns a string representation of the date in the users locale
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toLocaleTimeString( )'
            returns: string
            version: 0.1
            description: |
              Returns a string representation of the time in the users locale, 
              for example "Monday, December 31, 2012". However, by design this 
              can output different looking string based on the users locale,
              operating system and browser

      - title: toDateString
        description: Returns a string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toDateString( )'
            returns: string
            version: 0.1
            description: |
              Returns a string representation of the date, for example
              "Mon Dec 31 2012"

      - title: toISOString
        description: Returns a ISO8601 string representation of the datetime
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toISOString( )'
            returns: string
            version: 0.1
            description: |
              Returns a ISO8601 string representation of the datetime, for 
              example "2012-12-31T23:59:59.000+0000". This is the same as 
              running <a href="/api/toJSON">toJSON</a>, or 
              <a href="/api/toString">toString</a><code>('ISO')</code> 

      - title: toISODateString
        description: Returns a ISO8601 string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toISODateString( )'
            returns: string
            version: 0.2
            description: |
              Returns a ISO8601 string representation of the date, for example
              "2012-12-31". This is the same as running 
              <a href="/api/toString">toString</a><code>('ISODate')</code>


      - title: toRFC1036String
        description: Returns a RFC1036 string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toRFC1036String( )'
            returns: string
            version: 0.1
            description: |
              Returns an RFC1036 string representation of the date, for example
              "Mon, 31 Dec 12 23:59:59 +0000". This is the same as running 
              <a href="/api/toString">toString</a><code>('RFC1036')</code>

      - title: toRFC822String
        description: Returns a RFC822 string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toRFC822String( )'
            returns: string
            version: 0.1
            description: |
              Returns an RFC822 string representation of the date, for example
              "Mon, 31 Dec 12 23:59:59 +0000". This is the same as running 
              <a href="/api/toString">toString</a><code>('RFC822')</code>

      - title: toRFC850String
        description: Returns a RFC850 string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toRFC850String( )'
            returns: string
            version: 0.1
            description: |
              Returns an RFC850 string representation of the date, for example
              "Monday, 31-Dec-12 23:59:59 +00:00". This is the same as running 
              <a href="/api/toString">toString</a><code>('RFC850')</code>

      - title: toRFC3339String
        description: Returns a RFC3339 string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toRFC3339String( )'
            returns: string
            version: 0.1
            description: |
              Returns an RFC3339 string representation of the date, for example
              "2012-12-31T23:59:59+00:00". This is the same as running 
              <a href="/api/toString">toString</a><code>('RFC3339')</code>

      - title: toRFC1123String
        description: Returns a RFC1123 string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toRFC1123String( )'
            returns: string
            version: 0.1
            description: |
              Returns an RFC1123 string representation of the date, for example
              "Mon, 31 Dec 2012 23:59:59 +0000". This is the same as running 
              <a href="/api/toString">toString</a><code>('RFC1123')</code>

      - title: toRFC2822String
        description: Returns a RFC2822 string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toRFC2822String( )'
            returns: string
            version: 0.1
            description: |
              Returns an RFC2822 string representation of the date, for example
              "Mon, 31 Dec 2012 23:59:59 +0000". This is the same as running 
              <a href="/api/toString">toString</a><code>('RFC2822')</code>

      - title: toNCC1701String
        description: Returns a NCC1701 string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toNCC1701String( )'
            returns: string
            version: 0.1
            description: |
              Returns an NCC1701 2009 era stardate, for example "2012.366".
              This is the same as running 
              <a href="/api/toString">toString</a><code>('NCC1701')</code>

      - title: toW3CString
        description: Returns a W3C string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toW3CString( )'
            returns: string
            version: 0.1
            description: |
              Returns an W3C string representation of the date, for example
              "2012-12-31T23:59:59+00:00". This is the same as running 
              <a href="/api/toString">toString</a><code>('W3C')</code>

      - title: toRSSString
        description: Returns a RSS string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toRSSString( )'
            returns: string
            version: 0.1
            description: |
              Returns an RSS string representation of the date, for example
              "Mon, 31 Dec 2012 23:59:59 +0000". This is the same as running 
              <a href="/api/toString">toString</a><code>('RSS')</code>

      - title: toCOOKIEString
        description: Returns a COOKIE string representation of the date 
        tags:
          - v0.1
        category: string
        signatures:
          - signature: '.toCOOKIEString( )'
            returns: string
            version: 0.1
            description: |
              Returns an COOKIE string representation of the date, for example
              "Monday, 31-Dec-12 23:59:59 +00:00". This is the same as running 
              <a href="/api/toString">toString</a><code>('COOKIE')</code>

  - title: Instance Misc Methods
    functions: 
      - title: isEqual
        description: Assert that the set date is the same as another date
        tags:
          - v0.1
        category: assertions
        signatures:
          - signature: '.isEqual( tempus_or_date_object )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is equal to the tempus_or_date_object. 
              This is effectively the same as 
              <code>.valueOf() === tempus_or_date_object</code>

          - signature: '.isEqual( )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is equal to the current date and time.
              This is effectively the same as same as using 
              <code>.isEqual( Tempus.now() )</code>

          - signature: '.isEqual( int_timestamp )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is equal to a date of the timestamp
              <var>int_timestamp</var>. This is effectively the same as same as 
              using <code>.isEqual( Tempus(int_timestamp) )</code>

          - signature: '.isEqual( year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]])'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is equal to a date set using the values 
              from <var>arguments</var>. This is effectively the same as using
              <code>.isEqual( Tempus(year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]]) )</code>

          - signature: '.isEqual( date_string [, formatter_string ] )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the date is equal to a recognisable
              <var>date_string</var> such as 
              "2011-01-01T12:00:00.000+0000". If 
              <var>formatter_string</var> is available, it will use this 
              as the <a href="/docs/reverse-formatting">reverse-formatter</a> 
              to parse <var>date_string</var> with

          - signature: '.isEqual( date_string, array_of_formatter_strings )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the date is equal to a recognisable
              <var>date_string</var> that has been parsed with one of the 
              <var>array_of_formatter_strings</var>
              (see <a href="/docs/reverse-formatting">reverse-formatting</a>)

          - signature: '.isEqual( array_of_arguments )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is equal to a date set to the 
              <var>array_of_arguments</var>, which will be extrapolated into a 
              set of arguments, similar to the above signatures

      - title: isBefore
        description: Assert that the set date occurs before another date
        tags:
          - v0.1
        category: assertions
        signatures:
          - signature: '.isBefore( tempus_or_date_object )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is before the tempus_or_date_object. 
              This is effectively the same as 
              <code>.valueOf() === tempus_or_date_object</code>

          - signature: '.isBefore( )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is before the current date and time.
              This is effectively the same as same as using 
              <code>.isBefore( Tempus.now() )</code>

          - signature: '.isBefore( int_timestamp )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is before a date of the timestamp
              <var>int_timestamp</var>. This is effectively the same as same as 
              using <code>.isBefore( Tempus(int_timestamp) )</code>

          - signature: '.isBefore( year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]])'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is before a date set using the values 
              from <var>arguments</var>. This is effectively the same as using
              <code>.isBefore( Tempus(year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]]) )</code>

          - signature: '.isBefore( date_string [, formatter_string ] )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the date is before a recognisable
              <var>date_string</var> such as 
              "2011-01-01T12:00:00.000+0000". If 
              <var>formatter_string</var> is available, it will use this 
              as the <a href="/docs/reverse-formatting">reverse-formatter</a> 
              to parse <var>date_string</var> with

          - signature: '.isBefore( date_string, array_of_formatter_strings )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the date is before a recognisable
              <var>date_string</var> that has been parsed with one of the 
              <var>array_of_formatter_strings</var>
              (see <a href="/docs/reverse-formatting">reverse-formatting</a>)

          - signature: '.isBefore( array_of_arguments )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is before a date set to the 
              <var>array_of_arguments</var>, which will be extrapolated into a 
              set of arguments, similar to the above signatures

      - title: isAfter
        description: Assert that the set date occurs after another date
        tags:
          - v0.1
        category: assertions
        signatures:
          - signature: '.isAfter( tempus_or_date_object )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is after the tempus_or_date_object. 
              This is effectively the same as 
              <code>.valueOf() === tempus_or_date_object</code>

          - signature: '.isAfter( )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is after the current date and time.
              This is effectively the same as same as using 
              <code>.isAfter( Tempus.now() )</code>

          - signature: '.isAfter( int_timestamp )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is after a date of the timestamp
              <var>int_timestamp</var>. This is effectively the same as same as 
              using <code>.isAfter( Tempus(int_timestamp) )</code>

          - signature: '.isAfter( year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]])'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is after a date set using the values 
              from <var>arguments</var>. This is effectively the same as using
              <code>.isAfter( Tempus(year, month [, date [, hour [, minute [, second [, millisecond [, timezoneOffset ]]]]]]) )</code>

          - signature: '.isAfter( date_string [, formatter_string ] )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the date is after a recognisable
              <var>date_string</var> such as 
              "2011-01-01T12:00:00.000+0000". If 
              <var>formatter_string</var> is available, it will use this 
              as the <a href="/docs/reverse-formatting">reverse-formatter</a> 
              to parse <var>date_string</var> with

          - signature: '.isAfter( date_string, array_of_formatter_strings )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the date is after a recognisable
              <var>date_string</var> that has been parsed with one of the 
              <var>array_of_formatter_strings</var>
              (see <a href="/docs/reverse-formatting">reverse-formatting</a>)

          - signature: '.isAfter( array_of_arguments )'
            returns: boolean
            version: 0.1
            description: |
              Assert that the set date is after a date set to the 
              <var>array_of_arguments</var>, which will be extrapolated into a 
              set of arguments, similar to the above signatures

      - title: valueOf
        description: Gets the current milliseconds since Epoch
        tags:
          - v0.1
        category: properties
        signatures:
          - signature: '.valueOf( )'
            returns: this
            version: 0.1
            description: |
              Gets the current milliseconds since Epoch 
              (Thu Jan 01 1970 00:00:00 GMT+0000)

      - title: toggleUTC
        description: Converts the timezone to UTC and back again
        tags:
          - v0.2
        category: properties
        signatures:
          - signature: '.toggleUTC( )'
            returns: this
            version: 0.1
            description: |
              Will convert the timezone to UTC. Running a second time will reset
              the timezone back to its' previous value, unless the timezone has
              changed.
          - signature: '.toggleUTC(true)'
            returns: this
            version: 0.1
            description: |
              Force the timezone to be reset to UTC. Running a second time will 
              keep the timezone at UTC.

          - signature: '.toggleUTC(false)'
            returns: this
            version: 0.1
            description: |
              Always attempt to return the timezone back to its' previous value.
              Running a second time will keep the timezone at its non-UTC state.

  - title: Timer
    functions: 

      - title: Tempus.Timer
        description: 'Creates a Timer object to execute a function after a period of time'
        category: timer
        tags:
          - v0.2
          - timer
        signatures:
          - signature: '[ new ]Tempus.Timer( )'
            returns: this
            version: 0.2
            description: |
              Creates a Timer object with no set arguments.

          - signature: '[ new ]Tempus.Timer( function [, number_after [, object_ctx ]] )'
            returns: this
            version: 0.2
            description: |
              Creates a new Timer object with <var>function</var> as the defined
              function. If <var>number_after</var> is supplied, when started the
              timer will execute <var>function</var> in <var>number_after</var>
              milliseconds. If <var>object_ctx</var> is supplied then 
              <var>function</var> will be called with <var>object_ctx</var> as 
              the `this` value. If it is not supplied, it will be called with 
              the timer class as the `this` value.

          - signature: '[ new ]Tempus.Timer( array_of_arguments )'
            returns: this
            version: 0.2
            description: |
              Creates a new Timer object, extrapolating 
              <var>array_of_arguments</var> into a set of arguments, using one 
              of the above signatues with them.
